= render :partial => "quby/answers/shared/main_label", :locals => {:question => question}
.description-and-fields
  .description
    - unless question.description.blank?
      :markdown
        #{raw question.description}
  .fields{:id => question.html_id}
    - cls = [question.type]
    - cls << "subinput"  if subquestion
    - cls << question.as if question.as
    - data = question.input_data
    - data[:show_values] = [true, :all, :paged].include? question.show_values
    - case question.as
    - when :slider
      - minimum_validation = question.validations.detect {|i| i[:type] == :minimum }
      - minimum = minimum_validation && minimum_validation[:value]
      - maximum_validation = question.validations.detect {|i| i[:type] == :maximum }
      - maximum = maximum_validation && maximum_validation[:value]
      = range_field :answer, question.key, autocomplete: question.autocomplete,
                                           class: cls,
                                           disabled: (disabled ? "" : nil),
                                           min: minimum,
                                           max: maximum,
                                           step: (question.type == :float ? 0.01 : 1),
                                           data: data
      - unless question.labels.blank?
        %table.labels
          %tr
            - question.labels.each_with_index do |label, i|
              -# Remove class when ie8 is dropped.
              - lcls = (i == 0) ? 'first' : (i == question.labels.size-1) ? 'last' : ''
              %td{class: lcls}= label.html_safe
    - else
      = text_field :answer, question.key, :autocomplete => question.autocomplete, :class => cls, :disabled => (disabled ? "" : nil), :size => (question.size || 30)
    %span.unit= raw question.unit
